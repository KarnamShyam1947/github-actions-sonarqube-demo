  name: praticeing github actions

  on:
    push:
      branches: [deploy]

  jobs:
    build:
      runs-on: [ubuntu-latest]
      steps:
        - name: Checkout source
          uses: actions/checkout@v3
          with:
            fetch-depth: 0

        - name: set up java
          uses: actions/setup-java@v3
          with:
            distribution: 'temurin'
            java-version: '17'

        - name: Cache SonarQube packages
          uses: actions/cache@v1
          with:
            path: ~/.sonar/cache
            key: ${{ runner.os }}-sonar
            restore-keys: ${{ runner.os }}-sonar

        - name: Cache Maven packages
          uses: actions/cache@v1
          with:
            path: ~/.m2
            key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
            restore-keys: ${{ runner.os }}-m2

        - name: Build and analyze
          env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          run: |
            mvn -B verify \
            org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=github-action-quality-gate-demo \
            -Dsonar.projectName='github-action-quality-gate-demo'

        - name: SonarQube Quality Gate check
          id: sonarqube-quality-gate-check
          uses: sonarsource/sonarqube-quality-gate-action@master
          timeout-minutes: 5
          env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }} 
          
        - name: "Here is SonarQube Quality Gate Status value.."
          run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"

        - name: Install dependencies
          run: mvn clean install -DskipTests

        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_PASSWORD }}
          # as my password contain some spical character i am using this
          # u can use docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}

        - name: Build docker image
          run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/springboot-sonarqube .

        - name: Publish image to docker hub
          run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/springboot-sonarqube:latest
    
    deploy:
      needs: build
      runs-on: self-hosted

      steps:
        - name: Pull image from docker hub
          run: sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/springboot-sonarqube:latest

        - name: Delete old container
          run: sudo docker rm -f springboot-sonarqube-container

        - name: Run docker container
          run: |
            sudo docker run -d \
            -p 8080:8080 \
            -e APP_NAME="${{ secrets.APP_NAME }}" \
            --name springboot-sonarqube-container \
            ${{ secrets.DOCKERHUB_USERNAME }}/springboot-sonarqube